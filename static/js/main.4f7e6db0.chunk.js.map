{"version":3,"sources":["api/reddit.js","components/Greeting.js","components/Clock.js","components/Source.js","api/oneliners.js","components/Joke.js","components/Weather.js","components/Todo.js","components/ToDoForm.js","components/ToDoList.js","assets/logo512.png","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","Greeting","date","useState","greeting","setGreeting","name","setName","userInput","setUserInput","saveData","newName","localStorage","setItem","handleSubmit","e","preventDefault","useEffect","hours","getHours","getTheGreeting","getItem","id","onDoubleClick","length","onSubmit","value","onChange","currentTarget","console","log","className","Clock","setHours","minutes","setMinutes","Date","setDate","refreshClock","getTheHours","mins","getMinutes","getTheMinutes","timerId","setInterval","clearInterval","Source","src","backgrounds","link","document","body","style","backgroundImage","href","target","rel","Joke","joke","setJoke","getJoke","a","oneliners","get","response","randomNum","Math","floor","random","data","children","title","Weather","temp","setTemp","icon","setIcon","lat","setLat","lon","setLon","loc","setLoc","navigator","geolocation","getCurrentPosition","position","round","coords","latitude","Number","EPSILON","longitude","getWeatherData","current","weather","status","headers","request","message","getCityName","isNaN","alt","Todo","todos","handleToggle","onClick","complete","task","ToDoForm","addTask","type","placeholder","ToDoList","todosData","setTodosData","isActive","setIsActive","newList","JSON","stringify","mapped","map","todo","handleHideClick","handleFilter","filtered","filter","copy","now","parse","Loading","logo","App","setBackgrounds","source","setSource","setHref","isLoading","setIsLoading","getBackgrounds","reddit","url","permalink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4f7e6db0.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://www.reddit.com/r/EarthPorn.json?limit=100'\n});","import React, {useState, useEffect} from \"react\";\n\nlet Greeting = ({date}) => {\n    let [greeting, setGreeting] = useState([]);\n    let [name, setName] = useState('');\n    let [userInput, setUserInput] = useState('');\n\n    let saveData = (newName) => {\n        localStorage.setItem(\"userName\", newName)\n    }\n\n    let handleChange = (e) => {\n        setUserInput(e.currentTarget.value)\n        console.log(name)\n    }\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        setName(userInput);\n        saveData(userInput);\n    }\n\n    \n\n    let handleDclick = () => {\n        setUserInput(name);\n        setName('');\n        saveData('')\n    }\n    \n\n    useEffect(() => {\n        let getTheGreeting = () => {\n        let hours = date.getHours()\n        if(hours > 11 && hours < 17) {\n        setGreeting(`Good afternoon, ${name}`)\n        } else if (hours >= 17) {\n            setGreeting(`Good evening, ${name}`)\n        } else setGreeting(`Good Morning, ${name}`)\n        }\n        getTheGreeting();\n        if(localStorage.getItem(\"userName\")) {\n            setName(localStorage.getItem(\"userName\"));\n        }\n    }, [name, date])\n\n    return(\n        <div>\n            <h2 id=\"greeting\" onDoubleClick={handleDclick}>\n            {greeting}&nbsp;\n            {\n                name.length === 0 ? \n                <span>\n                <form onSubmit={handleSubmit} id=\"greeting-form\">\n                    <input value={userInput} onChange={handleChange} onSubmit={handleSubmit} className=\"greetinginput\"/>\n                </form>\n                </span> : ''\n            }\n            </h2>\n        </div> \n    )\n}\n\nexport default Greeting;","import React, {useEffect, useState} from \"react\";\nimport Greeting from './Greeting';\n\nlet Clock = () => {\n    let [hours, setHours] = useState([]);\n    let [minutes, setMinutes] = useState([]);\n    let [date, setDate] = useState(new Date());\n\n    function refreshClock() {\n        setDate(new Date());\n    }\n\n    useEffect(() => {\n        let getTheHours = () =>  {\n            let hours = date.getHours();\n            if (hours > 12) {\n                setHours(hours - 12)\n            } else setHours(hours)\n        }\n        let getTheMinutes = () => {\n            let mins = date.getMinutes();\n            if(mins < 10) {\n                setMinutes(`0${mins}`)\n            } else setMinutes(mins)\n        }\n        getTheHours();\n        getTheMinutes();\n        let timerId = setInterval(refreshClock, 1000)\n        return function cleanup() {\n            clearInterval(timerId);\n        }  \n    }, [date])\n    return(\n        <div className='clock-container'>\n            <h1 className=\"clock clockline\">\n                {hours + ':' + minutes}\n            </h1>\n            <Greeting date={date}/>\n        </div> \n    )\n}\n\n\nexport default Clock;","import React from \"react\";\n\n\nlet Source = ({src, backgrounds, link}) => {\n    document.body.style.backgroundImage = `url(${backgrounds})`\n    return(\n        <a href={link} target=\"_blank\" rel=\"noreferrer\" className=\"source\">\n            {src} \n        </a>\n    )\n}\n\nexport default Source;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://www.reddit.com/r/quotes.json?limit=100'\n});","import React, {useState, useEffect} from \"react\";\nimport oneliners from '../api/oneliners'\n\nlet Joke = () => {\n    let [joke, setJoke] = useState(null);\n  \n    let getJoke =  async () => {\n      let response = await oneliners.get();\n      let randomNum = Math.floor(Math.random() * 101)\n      if(response) {\n        setJoke(response.data.data.children[randomNum].data.title)\n      } else return\n    }\n\n    useEffect(() => {\n      getJoke()\n    }, []);\n      \n    return(\n        <div className='joke-container'>\n          <div id='joke'>\n            {joke}\n          </div>\n        </div>\n    )\n}\n\nexport default Joke;","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\n\nlet Weather = () => {\n    let [temp, setTemp] = useState([])\n    let [icon, setIcon] = useState([])\n    let [lat, setLat] = useState(null)\n    let [lon, setLon] = useState(null)\n    let [loc, setLoc] = useState([])\n\n    //retrieve user lat and lon upon first render\n    useEffect(() => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLat(Math.round((position.coords.latitude + Number.EPSILON) * 1000) / 1000)\n        setLon(Math.round((position.coords.longitude + Number.EPSILON) * 1000) / 1000)\n      })\n\n      //check if lat and lon have been set before using them to retrieve weather data\n      let getWeatherData = async () => {\n        if(lat && lon) {\n          try {\n            let response = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude={part}&appid=d9ecf1836d30f559f8beb48586830f6e&units=imperial`);\n              setTemp(response.data.current.temp)\n              setIcon(`http://openweathermap.org/img/wn/${response.data.current.weather[0].icon}@2x.png`)\n            } catch (error) {\n              let errorIcon = `http://openweathermap.org/img/wn/02d@2x.png`\n              setIcon(errorIcon)\n              setTemp('??')\n              if (error.response) {\n                console.log(error.response.data)\n                console.log(error.response.status)\n                console.log(error.response.headers)\n              } else if (error.request) {\n                console.log(error.request);\n              } else {\n                  console.log('Error', error.message)\n              }\n            }\n        }  \n    }\n\n    //check for lat and lon before retrieving city name\n    let getCityName = async () => {\n      if(lat && lon) {\n        let response = await axios.get(`https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=50&appid=1fd5b0f0d730c3f552c99458ab6bd06d`)\n        setLoc(response.data[0].name)\n      } else {\n          return\n      }\n    }\n    getWeatherData();\n    getCityName();\n    }, [lat, lon]);\n      \n    return(\n      <div >\n        <div id=\"weather-container\">\n          <p>{isNaN(temp) ? temp : Math.round(temp)}°</p>\n          <img alt={''} src={icon} id=\"weather-icon\"/>\n        </div> \n        <div>\n        <div id=\"location\">{loc}</div>\n        </div>\n      </div>  \n    )\n}\n\nexport default Weather;","import React from 'react';\n\nlet Todo = ({todos, handleToggle}) => {\n\n    let handleClick = (e) => {\n        console.log(e.currentTarget)\n        e.preventDefault()\n        handleToggle(e.currentTarget.id)\n    }\n\n    return(\n        <div onClick={handleClick} id={todos.id} className={todos.complete ? \"todos strike\" : \"todos\"}>\n            {todos.task}\n        </div>\n    )\n}\n\n\n\nexport default Todo;","import React, {useState} from \"react\";\n\nlet ToDoForm = ({addTask}) => {\n    let [userInput, setUserInput] = useState('');\n\n    let handleChange = (e) => {\n        setUserInput(e.currentTarget.value)\n    }\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        addTask(userInput);\n        setUserInput('');\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <input \n                className=\"todo-input\"\n                value={userInput} \n                type=\"text\" \n                onChange={handleChange} \n                onSubmit={handleSubmit}\n                placeholder=\"+\" \n            />\n        </form>\n    )\n}\n\nexport default ToDoForm;","import React, {useState, useEffect} from \"react\";\nimport Todo from './Todo';\nimport ToDoForm from './ToDoForm'\n\nlet ToDoList = () => {\n    let [todosData, setTodosData] = useState([]);\n    let [isActive, setIsActive] = useState(false)\n\n    let saveData = (newList) => {\n        localStorage.setItem(\"todos\", JSON.stringify(newList))\n    }\n\n    let handleToggle = (id) => {\n        console.log(id)\n        let mapped = todosData.map(todo => {\n            console.log(todo)\n            return todo.id == id ? {...todo, complete: !todo.complete} : {...todo};\n        });\n        setTodosData(mapped);\n        saveData(mapped);\n        console.log(mapped)\n    }\n\n    let handleHideClick = () => {\n        setIsActive(current => !current)\n    }\n\n    let handleFilter = () => {\n        let filtered = todosData.filter(todo => {\n            return !todo.complete;\n        });\n        setTodosData(filtered);\n        saveData(filtered);\n    }\n\n    let addTask = (userInput) => {\n        let copy = [...todosData];\n        copy = [...copy, { id: Date.now(), task: userInput, complete: false}]\n        setTodosData(copy)\n        saveData(copy);\n    }\n\n    let handleActiveness = () => {\n            if(isActive) {\n                return(\n                <div id=\"todo-container\">\n                    <span className=\"bold todohover\" onClick={handleHideClick}>To-Do's</span>\n                    {todosData.map(todo => {\n                        return (\n                            <div>\n                                <Todo todos={todo} handleToggle={handleToggle} />\n                            </div>\n                        )\n                    })}   \n                <ToDoForm addTask={addTask} />  \n                <p id=\"clearbutton\" onClick={handleFilter}>Clear Completed</p>\n            </div>\n            )\n        } else {\n            return(\n                <span className=\"bold todohover\" id=\"todo-container\" onClick={handleHideClick}>To-Do's</span>\n            )\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem(\"todos\")) {\n            setTodosData(JSON.parse(localStorage.getItem(\"todos\")))\n        }\n    },[])\n\n    return(\n        <div>\n            {handleActiveness()}\n        </div>\n    )\n\n}\n\nexport default ToDoList;","export default __webpack_public_path__ + \"static/media/logo512.a084e8ea.png\";","import React from \"react\";\nimport logo from '../assets/logo512.png';\n\nlet Loading = () => {\n    return(\n        <div id=\"loading-screen\">\n            <img alt=\"loading-icon\" src={logo} id=\"loading-icon\" />\n        </div>\n    )\n}\n\nexport default Loading;","import React, {useState, useEffect} from \"react\";\nimport reddit from \"./api/reddit\";\nimport Clock from \"./components/Clock\";\nimport Source from './components/Source'\nimport Joke from \"./components/Joke\";\nimport Weather from \"./components/Weather\";\nimport ToDoList from \"./components/ToDoList\";\nimport Loading from \"./components/Loading\";\n\nconst App = () => {\n  let [backgrounds, setBackgrounds] = useState(null);\n  let [source, setSource] = useState([]);\n  let [href, setHref] = useState([]);\n  let [isLoading, setIsLoading] = useState(true)\n\n  //get reddit background image api and set state\n  let getBackgrounds =  async () => {\n    let response = await reddit.get();\n    let randomNum = Math.floor(Math.random() * 101)\n    setBackgrounds(response.data.data.children[randomNum].data.url) \n    setSource(response.data.data.children[randomNum].data.title)\n    setHref(\"http://www.reddit.com\" + response.data.data.children[randomNum].data.permalink)\n  }\n\n  useEffect(() => {\n    //check if backgrounds have been set to determine if page is loading\n    if(!backgrounds) {\n      getBackgrounds()\n    } else setIsLoading(false)\n  }, [backgrounds]);\n\n\n  return (\n    <>\n      {!isLoading ? ( \n      <div className='container'>\n        <Source src={source} backgrounds={backgrounds} link={href}/> \n        <Weather />\n        <Clock />\n        <Joke />\n        <ToDoList />\n      </div>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}